# Build and deploy the website to GitHub Page

name: GitHub Page CICD

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

env:
  # See package.json for the following values
  NODE_VERSION: 16
  PATH_BUILD: ${{ github.workspace }}/out

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      cache-key-build: ${{ steps.config.outputs.cache-key-build }}
      cache-key-packages: ${{ steps.config.outputs.cache-key-packages }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Get build configuration
        id: config
        run: |
          build_event=${{ github.event_name }}
          branch_name=${{ github.ref_name }}
          sha=${{ github.sha }}
          ssha=${sha:0:7}
          runner_os=${{ runner.os }}

          echo "### Configuration :floppy_disk:"  | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- Event: ${build_event}"          | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- SHA: \`${ssha}\`"               | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- Branch: ${branch_name}"         | tee -a "$GITHUB_STEP_SUMMARY"
          echo "- Runner OS: ${runner_os}"        | tee -a "$GITHUB_STEP_SUMMARY"

          echo "cache-key-packages=${runner_os}-${{ hashFiles('**/package-lock.json') }}" | tee -a "$GITHUB_OUTPUT"
          echo "cache-key-build=${runner_os}-${ssha}"                                     | tee -a "$GITHUB_OUTPUT"

  build:
    needs: [config]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Set up Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up packages cache
        id: cache-packages
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: ${{ needs.config.outputs.cache-key-packages }}
          path: ~/.npm

      - if: ${{ steps.cache-packages.outputs.cache-hit != 'true' }}
        name: Install packages
        run: |
          npm install

      - name: Set up build cache
        id: cache-build
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: ${{ needs.config.outputs.cache-key-build }}
          path: |
            ${{ env.PATH_BUILD }}

      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        name: Build and export
        run: |
          npm run build
          npm run export

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    needs: [config, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Restore the cache
        id: cache-build
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: ${{ needs.config.outputs.cache-key-build }}
          path: |
            ${{ env.PATH_BUILD }}

      - name: Tar and upload the artifact to github
        uses: actions/upload-pages-artifact@253fd476ed429e83b7aae64a92a75b4ceb1a17cf  # v1.0.7
        with:
          path: ${{ env.PATH_BUILD }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@e690f03220f8a0e2d4da521d8b3a50e0b52650e0  # v1.2.6
